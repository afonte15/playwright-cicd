name: Run Tagged Playwright Tests

on:
  workflow_call:
    inputs:
      tag:
        description: 'Tag to filter tests'
        required: true
        type: string
      playwright_repo:
        description: 'Playwright Automation Repository'
        required: true
        type: string
      playwright_repo_ref:
        description: 'Branch or commit to use in the Playwright repository'
        required: false
        type: string
        default: 'main'
      environment:
        description: 'Environment to run the tests against'
        required: true
        type: string
      run_command:
        description: 'Command to run the Playwright tests'
        required: true
        type: string
    secrets:
      REPO_GITHUB_TOKEN:
        required: true
      QA_BASE_URL: # Added this secret
        required: true
      QA_ENVIRONMENT: # Added this secret
        required: true
      STAGING_BASE_URL: # Added this secret
        required: true
      STAGING_ENVIRONMENT: # Added this secret
        required: true

jobs:
  run-tagged-playwright-tests:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Playwright Automation Repo
      uses: actions/checkout@v3
      with:
        repository: ${{ inputs.playwright_repo }}
        ref: ${{ inputs.playwright_repo_ref }}
        token: ${{ secrets.REPO_GITHUB_TOKEN }}

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'

    - name: Install Dependencies
      run: npm install

    - name: Install Playwright Browsers
      run: npx playwright install --with-deps

    - name: Run Playwright Tests with Tag
      run: |
        if [ "${{ inputs.environment }}" == "qa" ]; then
          BASE_URL=${{ secrets.QA_BASE_URL }}
          ENVIRONMENT=${{ secrets.QA_ENVIRONMENT }}
        elif [ "${{ inputs.environment }}" == "staging" ]; then
          BASE_URL=${{ secrets.STAGING_BASE_URL }}
          ENVIRONMENT=${{ secrets.STAGING_ENVIRONMENT }}
        fi
        TEST_ENV=${{ inputs.environment }} ${{ inputs.run_command }} --grep @${{ inputs.tag }}
      env:
        GITHUB_TOKEN: ${{ secrets.REPO_GITHUB_TOKEN }}